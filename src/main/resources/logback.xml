<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2017 Ledger
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->
<configuration>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder immediateFlush="true">
            <pattern>%date %thread TraceId=%X{traceId} CorrelationId=%X{correlationId} [%level] %logger{0} : %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>8192</queueSize>
        <neverBlock>true</neverBlock>
        <appender-ref ref="STDOUT" />
    </appender>

    <variable name="LOG_LEVEL" value="${LOG_LEVEL:-INFO}" />
    <variable name="CORE_LOG_LEVEL" value="${CORE_LOG_LEVEL:-WARN}" />
    <variable name="DAEMON_LOG_LEVEL" value="${DAEMON_LOG_LEVEL:-WARN}" />
    <variable name="SLICK_LOG_LEVEL" value="${SLICK_LOG_LEVEL:-WARN}" />
    <variable name="NETTY_LOG_LEVEL" value="${NETTY_LOG_LEVEL:-INFO}" />
    <variable name="TWITTER_LOG_LEVEL" value="${TWITTER_LOG_LEVEL:-WARN}" />
    <variable name="RABBITMQ_LOG_LEVEL" value="${RABBITMQ_LOG_LEVEL:-WARN}" />
    <variable name="FINATRA_LOG_LEVEL" value="${FINATRA_LOG_LEVEL:-WARN}" />
    <variable name="DJINNI_LOG_LEVEL" value="${DJINNI_LOG_LEVEL:-WARN}" />
    <variable name="SYNCHRONIZER_LOG_LEVEL" value="${SYNCHRONIZER_LOG_LEVEL:-WARN}" />

    <logger name="co.ledger.wallet.daemon.libledger_core" level="${CORE_LOG_LEVEL}" />
    <logger name="co.ledger.wallet.daemon" level="${DAEMON_LOG_LEVEL}" />
    <logger name="slick" level="${SLICK_LOG_LEVEL}" />
    <logger name="io.netty" level="${NETTY_LOG_LEVEL}" />
    <logger name="com.twitter" level="${TWITTER_LOG_LEVEL}" />
    <logger name="com.newmotion.akka.rabbitmq" level="${RABBITMQ_LOG_LEVEL}" />
    <logger name="com.twitter.finatra.http.filters.AccessLoggingFilter" level="${FINATRA_LOG_LEVEL}" />
    <logger name="djinni" level="${DJINNI_LOG_LEVEL}" />
    <root level="${LOG_LEVEL}">
        <appender-ref ref="ASYNC" />
    </root>
    <logger name="co.ledger.wallet.daemon.services.AccountSynchronizer" level="${SYNCHRONIZER_LOG_LEVEL}" />
    <logger name="akka.event.slf4j.Slf4jLogger" level="${SYNCHRONIZER_LOG_LEVEL}" />
    <logger name="co.ledger.wallet.daemon.services.AccountOperationsPublisher" level="${PUBLISHER_LOG_LEVEL}" />

</configuration>